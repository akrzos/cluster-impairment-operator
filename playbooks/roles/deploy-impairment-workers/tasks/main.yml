#---
# tasks file for deploy-impairment-workers
- debug:
    msg: "Running main task for ClusterImpairment {{ ansible_operator_meta.name }} in namespace {{ ansible_operator_meta.namespace }}"

- name: Get ClusterImpairment status
  k8s_info:
    api_version: apps.redhat.com/v1alpha1
    kind: ClusterImpairment
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
  register: impairment_facts

- debug:
    var: impairment_facts

- name: Run impairments
  when: "('status' not in impairment_facts.resources[0]) or 'run_status' not in impairment_facts.resources[0]['status'] or impairment_facts.resources[0]['status']['run_status'] == 'not_run'"
  block:
    - name: Mark as running
      operator_sdk.util.k8s_status:
        api_version: apps.redhat.com/v1alpha1
        kind: ClusterImpairment
        name: "{{ ansible_operator_meta.name }}"
        namespace: "{{ ansible_operator_meta.namespace }}"
        status:
          run_status: "running"

    - name: Install dependencies
      pip:
        name:
          - openshift
          - kubernetes

    - name: Calculate start time epoch
      set_fact:
        start_time_epoch: "{{ (ansible_date_time.epoch | int) + (impairments['start_delay'] | int) }}"

    - name: Calculate end time epoch
      set_fact:
        end_time_epoch: "{{ (start_time_epoch | int) + (impairments['duration'] | int) }}"

    - name: Create the list of interfaces
      set_fact:
        impairment_interface_list: "{{ impairments['interfaces'] | join(',') }}"

    - debug:
        var: end_time_epoch

    - name: Deploy Daemonset
      k8s:
        definition: "{{ lookup('template', 'impairment-daemonset.yaml.j2') | from_yaml }}"
        wait: yes
    #    wait_condition:
    #      type: Complete
    #      status: "True"
    
    #  vars:
    #    student_number: "{{ item }}"

    #- name: Get info about the daemonset pods
    #  k8s_info:
    #    kind: Pod
    #    label_selectors:
    #      - name = cluster-impairment
    #    namespace: default
    #  register: daemonset_pod_instances


    #- debug:
    #    var: daemonset_pod_instances

    #- pause:
    #    seconds: 2

    #- name: Wait for pods to be ready
    #  command: >
    #    oc wait --for=condition=Ready
    #    pods -l name=cluster-impairment --timeout=60s

    - name: Wait for pods to finish
      pause:
        seconds: "{{ impairments['duration'] + impairments['start_delay'] + 6}}"

    - name: Remove Daemonset
      k8s:
        state: absent
        definition: "{{ lookup('template', 'impairment-daemonset.yaml.j2') | from_yaml }}"

- name: Mark as complete
  operator_sdk.util.k8s_status:
    api_version: apps.redhat.com/v1alpha1
    kind: ClusterImpairment
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      run_status: "complete"

