apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cluster-impairment-initializer
  namespace: cluster-impairment-operator
  labels:
    k8s-app: cluster-impairment-initializer
spec:
  selector:
    matchLabels:
      name: cluster-impairment-initializer
  template:
    metadata:
      labels:
        name: cluster-impairment-initializer
    spec:
{% if impairments.node_selector is defined %}
      nodeSelector:
        "{{ impairments.node_selector.key }}": "{{ impairments.node_selector.value }}"
{% endif %}
      containers:
        - name: impairment-worker
          image: quay.io/redhat-performance/cluster-impairment-worker
          env:
          - name: INTERFACE
            value: "{{ impairment_interface_list }}"
          # Bandwidth
{% if impairments.bandwidth is defined %}
          - name: BANDWIDTH_LIMIT
            value: "{{ impairments.bandwidth }}"
{% endif %}
          # Latency
{% if impairments.latency is defined %}
          - name: LATENCY
            value: "{{ impairments.latency }}"
{% endif %}
          # Packet loss
{% if impairments.loss is defined %}
          - name: PACKET_LOSS
            value: "{{ impairments.loss }}"
{% endif %}

          # Ingress
{% if impairments.ingress is defined %}
          # Ingress bandwidth
{% if impairments.ingress.bandwidth is defined %}
          - name: INGRESS_BANDWIDTH_LIMIT
            value: "{{ impairments.ingress.bandwidth }}"
{% endif %}
          # Ingress latency
{% if impairments.ingress.latency is defined %}
          - name: INGRESS_LATENCY
            value: "{{ impairments.ingress.latency }}"
{% endif %}
          # Ingress packet loss
{% if impairments.ingress.loss is defined %}
          - name: INGRESS_PACKET_LOSS
            value: "{{ impairments.ingress.loss }}"
{% endif %}
{% endif %}
          # Egress
{% if impairments.egress is defined %}
          # Egress bandwidth
{% if impairments.egress.bandwidth is defined %}
          - name: EGRESS_BANDWIDTH_LIMIT
            value: "{{ impairments.egress.bandwidth }}"
{% endif %}
          # Egress latency
{% if impairments.egress.latency is defined %}
          - name: EGRESS_LATENCY
            value: "{{ impairments.egress.latency }}"
{% endif %}
          # Egress packet loss
{% if impairments.egress.loss is defined %}
          - name: EGRESS_PACKET_LOSS
            value: "{{ impairments.egress.loss }}"
{% endif %}
{% endif %}

# Duration or end time
          - name: START_TIME
            value: "{{ start_time_epoch }}"
{% if end_time_epoch is defined %}
          - name: END_TIME
            value: "{{ end_time_epoch }}"
{% else %}
          - name: DURATION
            value: "-1"
{% endif %}
          # Link Flapping Enabled
{% if impairments.link_flapping.enable is defined %}
          - name: LINK_FLAPPING
            value: "{{ impairments.link_flapping.enable }}"
{% endif %}
          # Link Flapping Down Time
{% if impairments.link_flapping.down_time is defined %}
          - name: LINK_FLAP_DOWN_TIME
            value: "{{ impairments.link_flapping.down_time }}"
{% endif %}
          # Link Flapping Up Time
{% if impairments.link_flapping.up_time is defined %}
          - name: LINK_FLAP_UP_TIME
            value: "{{ impairments.link_flapping.up_time }}"
{% endif %}
#          - name: DRY_RUN
#            value: "true"
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /lib/modules
            name: modprobe-modules-dir
      volumes:
      - name: modprobe-modules-dir
        hostPath:
          path: /lib/modules
      hostNetwork: true
      dnsPolicy: Default
      serviceAccountName: network-access
